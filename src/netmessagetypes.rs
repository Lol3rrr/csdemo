impl TryFrom<i32> for NetmessageType {
    type Error = i32;

    fn try_from(value: i32) -> Result<Self, Self::Error> {
        use NetmessageType::*;

        match value {
            0 => Ok(net_NOP),
            1 => Ok(net_Disconnect),
            3 => Ok(net_SplitScreenUser),
            4 => Ok(net_Tick),
            5 => Ok(net_StringCmd),
            6 => Ok(net_SetConVar),
            7 => Ok(net_SignonState),
            8 => Ok(net_SpawnGroup_Load),
            9 => Ok(net_SpawnGroup_ManifestUpdate),
            11 => Ok(net_SpawnGroup_SetCreationTick),
            12 => Ok(net_SpawnGroup_Unload),
            13 => Ok(net_SpawnGroup_LoadCompleted),
            15 => Ok(net_DebugOverlay),
            40 => Ok(svc_ServerInfo),
            41 => Ok(svc_FlattenedSerializer),
            42 => Ok(svc_ClassInfo),
            43 => Ok(svc_SetPause),
            44 => Ok(svc_CreateStringTable),
            45 => Ok(svc_UpdateStringTable),
            46 => Ok(svc_VoiceInit),
            47 => Ok(svc_VoiceData),
            48 => Ok(svc_Print),
            49 => Ok(svc_Sounds),
            50 => Ok(svc_SetView),
            51 => Ok(svc_ClearAllStringTables),
            52 => Ok(svc_CmdKeyValues),
            53 => Ok(svc_BSPDecal),
            54 => Ok(svc_SplitScreen),
            55 => Ok(svc_PacketEntities),
            56 => Ok(svc_Prefetch),
            57 => Ok(svc_Menu),
            58 => Ok(svc_GetCvarValue),
            59 => Ok(svc_StopSound),
            60 => Ok(svc_PeerList),
            61 => Ok(svc_PacketReliable),
            62 => Ok(svc_HLTVStatus),
            63 => Ok(svc_ServerSteamID),
            70 => Ok(svc_FullFrameSplit),
            71 => Ok(svc_RconServerDetails),
            72 => Ok(svc_UserMessage),
            73 => Ok(svc_HltvReplay),
            74 => Ok(svc_Broadcast_Command),
            75 => Ok(svc_HltvFixupOperatorStatus),
            76 => Ok(svc_UserCmds),
            101 => Ok(UM_AchievementEvent),
            102 => Ok(UM_CloseCaption),
            103 => Ok(UM_CloseCaptionDirect),
            104 => Ok(UM_CurrentTimescale),
            105 => Ok(UM_DesiredTimescale),
            106 => Ok(UM_Fade),
            107 => Ok(UM_GameTitle),
            110 => Ok(UM_HudMsg),
            111 => Ok(UM_HudText),
            113 => Ok(UM_ColoredText),
            114 => Ok(UM_RequestState),
            115 => Ok(UM_ResetHUD),
            116 => Ok(UM_Rumble),
            117 => Ok(UM_SayText),
            118 => Ok(UM_SayText2),
            119 => Ok(UM_SayTextChannel),
            120 => Ok(UM_Shake),
            121 => Ok(UM_ShakeDir),
            124 => Ok(UM_TextMsg),
            125 => Ok(UM_ScreenTilt),
            128 => Ok(UM_VoiceMask),
            130 => Ok(UM_SendAudio),
            131 => Ok(UM_ItemPickup),
            132 => Ok(UM_AmmoDenied),
            134 => Ok(UM_ShowMenu),
            135 => Ok(UM_CreditsMsg),
            142 => Ok(UM_CloseCaptionPlaceholder),
            143 => Ok(UM_CameraTransition),
            144 => Ok(UM_AudioParameter),
            145 => Ok(UM_ParticleManager),
            146 => Ok(UM_HudError),
            148 => Ok(UM_CustomGameEvent),
            149 => Ok(UM_AnimGraphUpdate),
            150 => Ok(UM_HapticsManagerPulse),
            151 => Ok(UM_HapticsManagerEffect),
            152 => Ok(UM_CommandQueueState),
            153 => Ok(UM_UpdateCssClasses),
            154 => Ok(UM_ServerFrameTime),
            155 => Ok(UM_LagCompensationError),
            156 => Ok(UM_RequestDllStatus),
            157 => Ok(UM_RequestUtilAction),
            158 => Ok(UM_UtilActionResponse),
            159 => Ok(UM_DllStatusResponse),
            160 => Ok(UM_RequestInventory),
            161 => Ok(UM_InventoryResponse),
            200 => Ok(GE_VDebugGameSessionIDEvent),
            201 => Ok(GE_PlaceDecalEvent),
            202 => Ok(GE_ClearWorldDecalsEvent),
            203 => Ok(GE_ClearEntityDecalsEvent),
            204 => Ok(GE_ClearDecalsForSkeletonInstanceEvent),
            205 => Ok(GE_Source1LegacyGameEventList),
            206 => Ok(GE_Source1LegacyListenEvents),
            207 => Ok(GE_Source1LegacyGameEvent),
            208 => Ok(GE_SosStartSoundEvent),
            209 => Ok(GE_SosStopSoundEvent),
            210 => Ok(GE_SosSetSoundEventParams),
            211 => Ok(GE_SosSetLibraryStackFields),
            212 => Ok(GE_SosStopSoundEventHash),
            301 => Ok(CS_UM_VGUIMenu),
            302 => Ok(CS_UM_Geiger),
            303 => Ok(CS_UM_Train),
            304 => Ok(CS_UM_HudText),
            305 => Ok(CS_UM_SayText),
            306 => Ok(CS_UM_SayText2),
            307 => Ok(CS_UM_TextMsg),
            308 => Ok(CS_UM_HudMsg),
            309 => Ok(CS_UM_ResetHud),
            310 => Ok(CS_UM_GameTitle),
            312 => Ok(CS_UM_Shake),
            313 => Ok(CS_UM_Fade),
            314 => Ok(CS_UM_Rumble),
            315 => Ok(CS_UM_CloseCaption),
            316 => Ok(CS_UM_CloseCaptionDirect),
            317 => Ok(CS_UM_SendAudio),
            318 => Ok(CS_UM_RawAudio),
            319 => Ok(CS_UM_VoiceMask),
            320 => Ok(CS_UM_RequestState),
            321 => Ok(CS_UM_Damage),
            322 => Ok(CS_UM_RadioText),
            323 => Ok(CS_UM_HintText),
            324 => Ok(CS_UM_KeyHintText),
            325 => Ok(CS_UM_ProcessSpottedEntityUpdate),
            326 => Ok(CS_UM_ReloadEffect),
            327 => Ok(CS_UM_AdjustMoney),
            328 => Ok(CS_UM_UpdateTeamMoney),
            329 => Ok(CS_UM_StopSpectatorMode),
            330 => Ok(CS_UM_KillCam),
            331 => Ok(CS_UM_DesiredTimescale),
            332 => Ok(CS_UM_CurrentTimescale),
            333 => Ok(CS_UM_AchievementEvent),
            334 => Ok(CS_UM_MatchEndConditions),
            335 => Ok(CS_UM_DisconnectToLobby),
            336 => Ok(CS_UM_PlayerStatsUpdate),
            338 => Ok(CS_UM_WarmupHasEnded),
            339 => Ok(CS_UM_ClientInfo),
            340 => Ok(CS_UM_XRankGet),
            341 => Ok(CS_UM_XRankUpd),
            345 => Ok(CS_UM_CallVoteFailed),
            346 => Ok(CS_UM_VoteStart),
            347 => Ok(CS_UM_VotePass),
            348 => Ok(CS_UM_VoteFailed),
            349 => Ok(CS_UM_VoteSetup),
            350 => Ok(CS_UM_ServerRankRevealAll),
            351 => Ok(CS_UM_SendLastKillerDamageToClient),
            352 => Ok(CS_UM_ServerRankUpdate),
            353 => Ok(CS_UM_ItemPickup),
            354 => Ok(CS_UM_ShowMenu),
            355 => Ok(CS_UM_BarTime),
            356 => Ok(CS_UM_AmmoDenied),
            357 => Ok(CS_UM_MarkAchievement),
            358 => Ok(CS_UM_MatchStatsUpdate),
            359 => Ok(CS_UM_ItemDrop),
            360 => Ok(CS_UM_GlowPropTurnOff),
            361 => Ok(CS_UM_SendPlayerItemDrops),
            362 => Ok(CS_UM_RoundBackupFilenames),
            363 => Ok(CS_UM_SendPlayerItemFound),
            364 => Ok(CS_UM_ReportHit),
            365 => Ok(CS_UM_XpUpdate),
            366 => Ok(CS_UM_QuestProgress),
            367 => Ok(CS_UM_ScoreLeaderboardData),
            368 => Ok(CS_UM_PlayerDecalDigitalSignature),
            369 => Ok(CS_UM_WeaponSound),
            370 => Ok(CS_UM_UpdateScreenHealthBar),
            371 => Ok(CS_UM_EntityOutlineHighlight),
            372 => Ok(CS_UM_SSUI),
            373 => Ok(CS_UM_SurvivalStats),
            374 => Ok(CS_UM_DisconnectToLobby2),
            375 => Ok(CS_UM_EndOfMatchAllPlayersData),
            376 => Ok(CS_UM_PostRoundDamageReport),
            379 => Ok(CS_UM_RoundEndReportData),
            380 => Ok(CS_UM_CurrentRoundOdds),
            381 => Ok(CS_UM_DeepStats),
            382 => Ok(CS_UM_UtilMsg),
            383 => Ok(CS_UM_ShootInfo),
            //
            400 => Ok(TE_EffectDispatch),
            410 => Ok(TE_Decal),
            411 => Ok(TE_WorldDecal),
            419 => Ok(TE_Explosion),
            423 => Ok(TE_PhysicsProp),
            //
            450 => Ok(CS_GE_PlayerAnimationEvent),
            451 => Ok(CS_GE_RadioIconEvent),
            452 => Ok(CS_GE_FireBullets),
            other => Err(other),
        }
    }
}

#[derive(Debug, PartialEq)]
#[allow(non_camel_case_types)]
pub enum NetmessageType {
    net_NOP,
    net_Disconnect,
    net_SplitScreenUser,
    net_Tick,
    net_StringCmd,
    net_SetConVar,
    net_SignonState,
    net_SpawnGroup_Load,
    net_SpawnGroup_ManifestUpdate,
    net_SpawnGroup_SetCreationTick,
    net_SpawnGroup_Unload,
    net_SpawnGroup_LoadCompleted,
    net_DebugOverlay,
    svc_ServerInfo,
    svc_FlattenedSerializer,
    svc_ClassInfo,
    svc_SetPause,
    svc_CreateStringTable,
    svc_UpdateStringTable,
    svc_VoiceInit,
    svc_VoiceData,
    svc_Print,
    svc_Sounds,
    svc_SetView,
    svc_ClearAllStringTables,
    svc_CmdKeyValues,
    svc_BSPDecal,
    svc_SplitScreen,
    svc_PacketEntities,
    svc_Prefetch,
    svc_Menu,
    svc_GetCvarValue,
    svc_StopSound,
    svc_PeerList,
    svc_PacketReliable,
    svc_HLTVStatus,
    svc_ServerSteamID,
    svc_FullFrameSplit,
    svc_RconServerDetails,
    svc_UserMessage,
    svc_HltvReplay,
    svc_Broadcast_Command,
    svc_HltvFixupOperatorStatus,
    svc_UserCmds,
    GE_VDebugGameSessionIDEvent,
    GE_PlaceDecalEvent,
    GE_ClearWorldDecalsEvent,
    GE_ClearEntityDecalsEvent,
    GE_ClearDecalsForSkeletonInstanceEvent,
    GE_Source1LegacyGameEventList,
    GE_Source1LegacyListenEvents,
    GE_Source1LegacyGameEvent,
    GE_SosStartSoundEvent,
    GE_SosStopSoundEvent,
    GE_SosSetSoundEventParams,
    GE_SosSetLibraryStackFields,
    GE_SosStopSoundEventHash,
    CS_UM_VGUIMenu,
    CS_UM_Geiger,
    CS_UM_Train,
    CS_UM_HudText,
    CS_UM_SayText,
    CS_UM_SayText2,
    CS_UM_TextMsg,
    CS_UM_HudMsg,
    CS_UM_ResetHud,
    CS_UM_GameTitle,
    CS_UM_Shake,
    CS_UM_Fade,
    CS_UM_Rumble,
    CS_UM_CloseCaption,
    CS_UM_CloseCaptionDirect,
    CS_UM_SendAudio,
    CS_UM_RawAudio,
    CS_UM_VoiceMask,
    CS_UM_RequestState,
    CS_UM_Damage,
    CS_UM_RadioText,
    CS_UM_HintText,
    CS_UM_KeyHintText,
    CS_UM_ProcessSpottedEntityUpdate,
    CS_UM_ReloadEffect,
    CS_UM_AdjustMoney,
    CS_UM_UpdateTeamMoney,
    CS_UM_StopSpectatorMode,
    CS_UM_KillCam,
    CS_UM_DesiredTimescale,
    CS_UM_CurrentTimescale,
    CS_UM_AchievementEvent,
    CS_UM_MatchEndConditions,
    CS_UM_DisconnectToLobby,
    CS_UM_PlayerStatsUpdate,
    CS_UM_WarmupHasEnded,
    CS_UM_ClientInfo,
    CS_UM_XRankGet,
    CS_UM_XRankUpd,
    CS_UM_CallVoteFailed,
    CS_UM_VoteStart,
    CS_UM_VotePass,
    CS_UM_VoteFailed,
    CS_UM_VoteSetup,
    CS_UM_ServerRankRevealAll,
    CS_UM_SendLastKillerDamageToClient,
    CS_UM_ServerRankUpdate,
    CS_UM_ItemPickup,
    CS_UM_ShowMenu,
    CS_UM_BarTime,
    CS_UM_AmmoDenied,
    CS_UM_MarkAchievement,
    CS_UM_MatchStatsUpdate,
    CS_UM_ItemDrop,
    CS_UM_GlowPropTurnOff,
    CS_UM_SendPlayerItemDrops,
    CS_UM_RoundBackupFilenames,
    CS_UM_SendPlayerItemFound,
    CS_UM_ReportHit,
    CS_UM_XpUpdate,
    CS_UM_QuestProgress,
    CS_UM_ScoreLeaderboardData,
    CS_UM_PlayerDecalDigitalSignature,
    CS_UM_WeaponSound,
    CS_UM_UpdateScreenHealthBar,
    CS_UM_EntityOutlineHighlight,
    CS_UM_SSUI,
    CS_UM_SurvivalStats,
    CS_UM_DisconnectToLobby2,
    CS_UM_EndOfMatchAllPlayersData,
    CS_UM_PostRoundDamageReport,
    CS_UM_RoundEndReportData,
    CS_UM_CurrentRoundOdds,
    CS_UM_DeepStats,
    CS_UM_UtilMsg,
    CS_UM_ShootInfo,
    UM_AchievementEvent,
    UM_CloseCaption,
    UM_CloseCaptionDirect,
    UM_CurrentTimescale,
    UM_DesiredTimescale,
    UM_Fade,
    UM_GameTitle,
    UM_HudMsg,
    UM_HudText,
    UM_ColoredText,
    UM_RequestState,
    UM_ResetHUD,
    UM_Rumble,
    UM_SayText,
    UM_SayText2,
    UM_SayTextChannel,
    UM_Shake,
    UM_ShakeDir,
    UM_TextMsg,
    UM_ScreenTilt,
    UM_VoiceMask,
    UM_SendAudio,
    UM_ItemPickup,
    UM_AmmoDenied,
    UM_ShowMenu,
    UM_CreditsMsg,
    UM_CloseCaptionPlaceholder,
    UM_CameraTransition,
    UM_AudioParameter,
    UM_ParticleManager,
    UM_HudError,
    UM_CustomGameEvent,
    UM_AnimGraphUpdate,
    UM_HapticsManagerPulse,
    UM_HapticsManagerEffect,
    UM_CommandQueueState,
    UM_UpdateCssClasses,
    UM_ServerFrameTime,
    UM_LagCompensationError,
    UM_RequestDllStatus,
    UM_RequestUtilAction,
    UM_UtilActionResponse,
    UM_DllStatusResponse,
    UM_RequestInventory,
    UM_InventoryResponse,
    //
    TE_EffectDispatch,
    TE_Decal,
    TE_WorldDecal,
    TE_Explosion,
    TE_PhysicsProp,
    //
    CS_GE_PlayerAnimationEvent,
    CS_GE_RadioIconEvent,
    CS_GE_FireBullets,
}
